apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
        annotations:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.env.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.env.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.env.POSTGRES_DB }}"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - sh
              - "-c"
              - "pg_isready -U {{ .Values.env.POSTGRES_USER }}"
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - sh
              - "-c"
              - "pg_isready -U {{ .Values.env.POSTGRES_USER }}"
            initialDelaySeconds: 5
            timeoutSeconds: 1
